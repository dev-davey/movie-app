{"version":3,"sources":["components/Search.js","components/Result.js","components/Results.js","components/Popup.js","App.js","reportWebVitals.js","index.js"],"names":["Search","handleInput","search","className","type","placeholder","onChange","onKeyPress","Result","result","openPopup","onClick","imdbID","src","Poster","alt","Title","Results","results","map","imbdID","Popup","selected","closePopup","Year","imdbRating","Plot","App","useState","s","state","setState","apiUrl","e","target","value","prevState","key","axios","then","data","Error","alert","id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4MAUeA,MARf,YAAuC,IAAtBC,EAAqB,EAArBA,YAAaC,EAAQ,EAARA,OAC1B,OACI,yBAASC,UAAU,iBAAnB,SACI,uBAAOC,KAAK,OAAOC,YAAY,wBAAwBF,UAAU,YAAYG,SAAUL,EAAaM,WAAYL,OCM7GM,MATf,YAAwC,IAAtBC,EAAqB,EAArBA,OAAQC,EAAa,EAAbA,UACxB,OACE,sBAAKP,UAAU,SAASQ,QAAS,kBAAMD,EAAUD,EAAOG,SAAxD,UACE,qBAAKC,IAAKJ,EAAOK,OAAQC,IAAI,KAC7B,6BAAKN,EAAOO,YCOHC,MAVf,YAA0C,IAAvBC,EAAsB,EAAtBA,QAASR,EAAa,EAAbA,UAC1B,OACE,yBAASP,UAAU,UAAnB,SACGe,EAAQC,KAAI,SAACV,GAAD,OACX,cAAC,EAAD,CAA4BA,OAAQA,EAAQC,UAAWA,GAA1CD,EAAOW,cCebC,MApBf,YAA0C,IAAzBC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,WACzB,OACE,yBAASpB,UAAU,QAAnB,SACE,sBAAKA,UAAU,UAAf,UACE,+BACGmB,EAASN,MADZ,IACmB,qCAAQM,EAASE,KAAjB,OAA+B,OAElD,oBAAGrB,UAAU,SAAb,qBAA+BmB,EAASG,cACxC,sBAAKtB,UAAU,OAAf,UACE,qBAAKU,IAAKS,EAASR,OAAQC,IAAI,KAC/B,4BAAIO,EAASI,UAEf,wBAAQvB,UAAU,QAAQQ,QAASY,EAAnC,yB,gBC2DOI,MAnEf,WAAgB,IAAD,EACaC,mBAAS,CACjCC,EAAG,GACHX,QAAS,GACTI,SAAU,KAJC,mBACNQ,EADM,KACCC,EADD,KAOPC,EAAS,2CAyCf,OACE,sBAAK7B,UAAU,MAAf,UACE,iCACE,sDAEF,iCACE,cAAC,EAAD,CAAQF,YA9BM,SAACgC,GACnB,IAAIJ,EAAII,EAAEC,OAAOC,MAEjBJ,GAAS,SAACK,GACR,OAAO,2BAAKA,GAAZ,IAAuBP,EAAGA,QA0BU3B,OA7CzB,SAAC+B,GACA,UAAVA,EAAEI,KACJC,IAAMN,EAAS,MAAQF,EAAMD,GAAGU,MAAK,YAAe,IAAZC,EAAW,EAAXA,KAEtC,GAAGA,EAAKC,MAAQ,OAAOC,MAAM,oBAE7B,IAAIxB,EAAUsB,EAAKxC,OAEnB+B,GAAS,SAACK,GACR,OAAO,2BAAKA,GAAZ,IAAuBlB,QAASA,aAqClC,cAAC,EAAD,CAASA,QAASY,EAAMZ,QAASR,UAvBrB,SAACiC,GACjBL,IAAMN,EAAS,MAAQW,GAAIJ,MAAK,YAAe,IACzC9B,EADwC,EAAX+B,KAGjCT,GAAS,SAACK,GACR,OAAO,2BAAKA,GAAZ,IAAuBd,SAAUb,aAoBD,oBAAxBqB,EAAMR,SAASN,OACrB,cAAC,EAAD,CAAOM,SAAUQ,EAAMR,SAAUC,WAhBtB,WACjBQ,GAAS,SAACK,GACR,OAAO,2BAAKA,GAAZ,IAAuBd,SAAU,kBCtCxBsB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBP,MAAK,YAAkD,IAA/CQ,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.c914db3a.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Search({handleInput, search}){\n    return(\n        <section className=\"searchBox-wrap\">\n            <input type=\"text\" placeholder=\"Search for a movie...\" className=\"searchBox\" onChange={handleInput} onKeyPress={search}/>\n        </section>\n    )\n}\n\nexport default Search;","import React from \"react\";\n\nfunction Result({ result, openPopup }) {\n  return (\n    <div className=\"result\" onClick={() => openPopup(result.imdbID)}>\n      <img src={result.Poster} alt=\"\" />\n      <h3>{result.Title}</h3>\n    </div>\n  );\n}\n\nexport default Result;\n","import React from \"react\";\nimport Result from \"./Result\";\n\nfunction Results({ results, openPopup }) {\n  return (\n    <section className=\"results\">\n      {results.map((result) => (\n        <Result key={result.imbdID} result={result} openPopup={openPopup} />\n      ))}\n    </section>\n  );\n}\n\nexport default Results;\n","import React from \"react\";\n\nfunction Popup({ selected, closePopup }) {\n  return (\n    <section className=\"popup\">\n      <div className=\"content\">\n        <h2>\n          {selected.Title} <span>({selected.Year})</span>{\" \"}\n        </h2>\n        <p className=\"rating\">Rating: {selected.imdbRating}</p>\n        <div className=\"plot\">\n          <img src={selected.Poster} alt=\"\" />\n          <p>{selected.Plot}</p>\n        </div>\n        <button className=\"close\" onClick={closePopup}>\n          Close\n        </button>\n      </div>\n    </section>\n  );\n}\n\nexport default Popup;\n","import React, { useState } from \"react\";\r\nimport Search from \"./components/Search\";\r\nimport Results from \"./components/Results\";\r\nimport Popup from \"./components/Popup\";\r\nimport axios from \"axios\";\r\n\r\nfunction App() {\r\n  const [state, setState] = useState({\r\n    s: \"\",\r\n    results: [],\r\n    selected: {},\r\n  });\r\n\r\n  const apiUrl = \"https://www.omdbapi.com/?apikey=fa1df14e\";\r\n\r\n  const search = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      axios(apiUrl + \"&s=\" + state.s).then(({ data }) => {\r\n\r\n        if(data.Error)  return alert('Movie not found!');\r\n\r\n        let results = data.Search;\r\n\r\n        setState((prevState) => {\r\n          return { ...prevState, results: results };\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleInput = (e) => {\r\n    let s = e.target.value;\r\n\r\n    setState((prevState) => {\r\n      return { ...prevState, s: s };\r\n    });\r\n  };\r\n\r\n  const openPopup = (id) => {\r\n    axios(apiUrl + \"&i=\" + id).then(({ data }) => {\r\n      let result = data;\r\n\r\n      setState((prevState) => {\r\n        return { ...prevState, selected: result };\r\n      });\r\n    });\r\n  };\r\n\r\n  const closePopup = () => {\r\n    setState((prevState) => {\r\n      return { ...prevState, selected: {} };\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header>\r\n        <h1>Search For A Movie</h1>\r\n      </header>\r\n      <main>\r\n        <Search handleInput={handleInput} search={search} />\r\n        <Results results={state.results} openPopup={openPopup} />\r\n\r\n        {typeof state.selected.Title != \"undefined\" ? (\r\n          <Popup selected={state.selected} closePopup={closePopup} />\r\n        ) : (\r\n          false\r\n        )}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}